{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA2BH,EAAMI,QAAQC,GAAzC,4BACL,6BAAML,EAAMI,QAAQE,OACpB,4BAAKN,EAAMI,QAAQG,YCLVC,G,MAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,GACnB,OAAO,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCLrBM,G,YAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAcA,EACdG,SAAWF,MC+BFG,E,kDAlCb,WAAYhB,GAAQ,IAAD,8BACjB,gBAOFa,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAPtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJE,E,qDAYnB,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,oBAG7C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAAIA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBACpG,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA7BVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1a745519.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css'\n\nexport const Card = (props) => (\n  <div className='card-container'>\n    <img\n      alt='monster'\n      src={ `https://robohash.org/${props.monster.id}?set=set2&size=180x180` }/>\n    <h2>{ props.monster.name }</h2>\n    <p>{ props.monster.email }</p>\n  </div>\n)","import React from 'react';\nimport { Card } from '../card/card.component';\nimport './card-list.styles.css';\n\nexport const CardList = (props) => {\n  return (\n    <div className='card-list'>\n      {props.monsters.map((monster) => {\n        return <Card key={monster.id} monster={monster} />;\n      })}\n    </div>\n  );\n};","import React from 'react';\nimport './search-box.styles.css';\n\nexport const SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input\n      className='search'\n      type='search'\n      placeholder={ placeholder }\n      onChange={ handleChange }/>\n  )\n}","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport './App.css';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  handleChange = e => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder='Search monsters'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}